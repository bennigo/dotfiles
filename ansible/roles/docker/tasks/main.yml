---
# Docker role - Official Docker Engine installation
# Installs Docker Engine (not docker.io) for production use

- name: Remove conflicting packages
  apt:
    name:
      - docker.io
      - docker-doc
      - docker-compose
      - docker-compose-v2
      - podman-docker
      - containerd
      - runc
    state: absent
  tags: docker

- name: Install prerequisites
  apt:
    name:
      - ca-certificates
      - curl
      - gnupg
    state: present
    update_cache: yes
  tags: docker

- name: Create Docker GPG keyring directory
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
  tags: docker

- name: Add Docker GPG key
  shell: |
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \
    gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  args:
    creates: /etc/apt/keyrings/docker.gpg
  tags: docker

- name: Set GPG key permissions
  file:
    path: /etc/apt/keyrings/docker.gpg
    mode: '0644'
  tags: docker

- name: Add Docker repository
  shell: |
    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
      https://download.docker.com/linux/ubuntu \
      $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
      tee /etc/apt/sources.list.d/docker.list > /dev/null
  args:
    creates: /etc/apt/sources.list.d/docker.list
  tags: docker
  notify: Update apt cache

- name: Update apt cache after adding Docker repo
  apt:
    update_cache: yes
  tags: docker

- name: Install Docker Engine
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
  tags: docker

- name: Ensure Docker service is enabled and started
  systemd:
    name: docker
    enabled: yes
    state: started
  tags: docker

- name: Add user to docker group
  user:
    name: "{{ target_user }}"
    groups: docker
    append: yes
  tags: docker
  notify: Remind user to relogin

- name: Verify Docker installation
  command: docker --version
  register: docker_version
  changed_when: false
  tags: docker

- name: Display Docker version
  debug:
    msg: "âœ… Docker installed: {{ docker_version.stdout }}"
  tags: docker

- name: Deploy Docker daemon config from dotfiles
  copy:
    src: "{{ directories.dotfiles }}/docker/daemon.json"
    dest: /etc/docker/daemon.json
    mode: '0644'
    owner: root
    group: root
  notify: Restart Docker
  tags: docker

- name: Deploy Docker utility scripts to ~/.local/bin
  copy:
    src: "{{ item }}"
    dest: "{{ directories.local_bin }}/{{ item | basename }}"
    mode: '0755'
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
  loop:
    - "{{ directories.dotfiles }}/docker/scripts/docker-cleanup"
    - "{{ directories.dotfiles }}/docker/scripts/docker-stats-pretty"
    - "{{ directories.dotfiles }}/docker/scripts/docker-logs-follow"
  become: no
  tags: docker
