---
# Base system setup - Essential packages and user configuration
# This role sets up the foundation that all other roles depend on

- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600
  tags: ["base", "packages"]

- name: Install essential base packages
  apt:
    name: "{{ base_packages }}"
    state: present
  tags: ["base", "packages"]

- name: Add user to video group (for GPU access)
  user:
    name: "{{ target_user }}"
    groups: video
    append: yes
  tags: ["base", "user"]

- name: Configure passwordless sudo for target user
  lineinfile:
    path: /etc/sudoers.d/{{ target_user }}
    line: "{{ target_user }} ALL=(ALL:ALL) NOPASSWD: ALL"
    create: yes
    mode: '0440'
    validate: 'visudo -cf %s'
  tags: ["base", "sudo"]

- name: Set up git configuration
  git_config:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    scope: global
  loop:
    - { name: "user.email", value: "{{ target_email }}" }
    - { name: "user.name", value: "{{ target_name }}" }
  become: no
  tags: ["base", "git"]

- name: Change default shell to zsh
  user:
    name: "{{ target_user }}"
    shell: /bin/zsh
  tags: ["base", "shell"]

- name: Configure PAM environment variables
  copy:
    src: "{{ playbook_dir }}/../system/etc/security/pam_env.conf"
    dest: /etc/security/pam_env.conf
    owner: root
    group: root
    mode: '0644'
    backup: yes
  tags: ["base", "environment"]

- name: Append network filesystem configurations to fstab
  block:
    - name: Check if dotfiles fstab content already exists in system fstab
      shell: grep -q "Network filesystems added from dotfiles configuration" /etc/fstab
      register: fstab_content_exists
      failed_when: false
      changed_when: false

    - name: Backup existing fstab
      copy:
        src: /etc/fstab
        dest: /etc/fstab.backup.{{ ansible_date_time.epoch }}
        remote_src: yes
        owner: root
        group: root
        mode: '0644'
      when: fstab_content_exists.rc != 0

    - name: Append dotfiles fstab content to system fstab
      blockinfile:
        path: /etc/fstab
        block: |
          # Network filesystems added from dotfiles configuration
          #
          granit.vedur.is:/mnt/sdc1/sk2 /mnt_data/sildata nfs defaults 0 0
          granit.vedur.is:/mnt/sdd1/sil/trem /mnt_data/tremdata nfs defaults 0 0
          rawdata.vedur.is:/exports/gpsdata /mnt_data/rawgpsdata nfs defaults 0 0
          rawdata.vedur.is:/exports/extension_meters_data /mnt_data/extension_meters_data nfs defaults 0 0
          frumgogn02.vedur.is:/home/vmfrum/vmgogn01/frumgogn /mnt_data/hytrodata nfs defaults 0 0
          # #gpsplot.vedur.is:/home/gpsops/rtklib-run/data /mnt_data/rtgpsdata nfs defaults 0 0
          rtk.vedur.is:/home/gpsops/rtklib-run/data /mnt_data/rtgpsdata nfs defaults 0 0
          #
          # gpsplot.vedur.is:/exports/gpstimes /mnt_data/gpsdata nfs defaults 0 0
          okada.vedur.is:/D/GMT/TOT/ /mnt_data/gpsdata nfs defaults 0 0
          gpsplot.vedur.is:/exports/share /mnt_data/datashare nfs defaults 0 0
          gpsplot.vedur.is:/home/gpsops/gamit-times /mnt_data/gps nfs defaults 0 0
          gpsplot.vedur.is:/home/gpsops/.gpsconfig /mnt_data/gpsconfig nfs defaults 0 0

          #nas
          #//nas.vedur.is/export/joklar /mnt/joklar cifs credentials=/root/.smbcredentials,iocharset=utf8,sec=ntlm,_netdev,domain=vi 0 0
          #//nas.vedur.is/vatn /mnt/nas/vatn cifs credentials=/root/.smbcredentials,iocharset=utf8,sec=ntlm,_netdev,domain=VI,vers=1.0 0 0
          #//nas.vedur.is/vatn /mnt/nas/vatn cifs credentials=/root/.smbcredentials,iocharset=utf8,domain=VI,vers=1.0 0 0
          #nas.vedur.is:/export/joklar /mnt/joklar nfs defaults 0 0
          #nas.vedur.is:/export/luk/gogn/haedarlikon/ /mnt/haedarlikon nfs defaults 0 0
        marker: "# {mark} ANSIBLE MANAGED BLOCK - Network filesystems"
        insertafter: EOF
        backup: yes
      when: fstab_content_exists.rc != 0

    - name: Create mount point directories for network filesystems
      file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: '0755'
      loop:
        - /mnt_data/sildata
        - /mnt_data/tremdata
        - /mnt_data/rawgpsdata
        - /mnt_data/extension_meters_data
        - /mnt_data/hytrodata
        - /mnt_data/rtgpsdata
        - /mnt_data/gpsdata
        - /mnt_data/datashare
        - /mnt_data/gps
        - /mnt_data/gpsconfig
      ignore_errors: yes

    - name: Display fstab configuration results
      debug:
        msg: |
          Network filesystem configuration: {{ 'ALREADY EXISTS' if fstab_content_exists.rc == 0 else 'ADDED' }}
          Mount points created for network shares
          Note: Network filesystems require network connectivity and proper credentials
  tags: ["base", "filesystem", "network"]

- name: Append network host configurations to hosts file
  block:
    - name: Check if dotfiles hosts content already exists in system hosts
      shell: grep -q "vedur.is network hosts" /etc/hosts
      register: hosts_content_exists
      failed_when: false
      changed_when: false

    - name: Backup existing hosts file
      copy:
        src: /etc/hosts
        dest: /etc/hosts.backup.{{ ansible_date_time.epoch }}
        remote_src: yes
        owner: root
        group: root
        mode: '0644'
      when: hosts_content_exists.rc != 0

    - name: Append dotfiles hosts content to system hosts file
      blockinfile:
        path: /etc/hosts
        block: |
          # vedur.is network hosts added from dotfiles configuration
          #
          #vedur
          #130.208.84.248    oskugos.vedur.is       oskugos
          10.91.10.129      oskugos.vedur.is       oskugos
          #10.91.10.191      klosigar.dyn.vedur.is  klosigar
          10.91.10.243      eldkeila.vedur.is      eldkeila
          10.91.10.236      aska.vedur.is          aska
          10.170.100.187    vi-tos-api.vedur.is    tos

          # servers
          10.170.80.8	      gpsplot.vedur.is       gpsplot
          10.170.80.4       rtk.vedur.is           rtk
          10.170.80.6       bernese.vedur.is       bernese
          10.170.80.7       rek.vedur.is           rek
          #10.170.80.2       rekold.vedur.is        rekold
          10.250.251.5      hildur.vedur.is        hildur
          10.170.80.3       okada.vedur.is         okada
          10.170.100.38     sarpur.vedur.is        sarpur
          130.208.87.145	  brunnur.vedur.is       brunnur

          # servers DMZ
          130.208.87.160    ntrcaster.vedur.is     ntrcaster

          #HÃ­
          130.208.140.137   strokkur.raunvis.hi.is strokkur
          130.208.143.214   dyngja.rhi.hi.is       dyngja
          130.208.165.26	  askja.rhi.hi.is	 askja
        marker: "# {mark} ANSIBLE MANAGED BLOCK - Network hosts"
        insertafter: EOF
        backup: yes
      when: hosts_content_exists.rc != 0

    - name: Display hosts configuration results
      debug:
        msg: |
          Network hosts configuration: {{ 'ALREADY EXISTS' if hosts_content_exists.rc == 0 else 'ADDED' }}
          Added vedur.is infrastructure hosts and external research servers
          Includes GPS servers, seismic monitoring, and University of Iceland systems
  tags: ["base", "network", "hosts"]

- name: Create essential directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    mode: '0755'
  loop:
    - "{{ target_home }}/.local/bin"
    - "{{ target_home }}/.config"
    - "{{ target_home }}/Downloads/git"
  become: no
  tags: ["base", "directories"]

- name: Install interception tools for caps2esc
  block:
    - name: Check if interception-caps2esc is available in main repos
      shell: apt-cache search interception-caps2esc
      register: interception_available
      changed_when: false
      failed_when: false
      
    - name: Install interception-caps2esc from main repos if available
      apt:
        name: interception-caps2esc
        state: present
      when: "'interception-caps2esc' in interception_available.stdout"
      
    - name: Install build dependencies for interception tools
      apt:
        name:
          - build-essential
          - cmake
          - libudev-dev
          - libevdev-dev
        state: present
      when: "'interception-caps2esc' not in interception_available.stdout"
      
    - name: Clone interception-tools repository
      git:
        repo: https://gitlab.com/interception/linux/tools.git
        dest: /tmp/interception-tools
        force: yes
      when: "'interception-caps2esc' not in interception_available.stdout"
      
    - name: Build and install interception-tools
      shell: |
        cd /tmp/interception-tools
        cmake -B build -DCMAKE_BUILD_TYPE=Release
        cmake --build build
        cmake --install build
      when: "'interception-caps2esc' not in interception_available.stdout"
      
    - name: Clone caps2esc repository
      git:
        repo: https://gitlab.com/interception/linux/plugins/caps2esc.git
        dest: /tmp/caps2esc
        force: yes
      when: "'interception-caps2esc' not in interception_available.stdout"
      
    - name: Build and install caps2esc
      shell: |
        cd /tmp/caps2esc
        cmake -B build -DCMAKE_BUILD_TYPE=Release
        cmake --build build
        cmake --install build
      when: "'interception-caps2esc' not in interception_available.stdout"
      
    - name: Clean up build directories
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/interception-tools
        - /tmp/caps2esc
      when: "'interception-caps2esc' not in interception_available.stdout"
      
  tags: ["base", "interception"]
