sudo apt install git stow zsh vim
sudo usermod -a -G video bgo
# edit sudoers
vim /etc/sudoers
bgo     ALL=(ALL:ALL) NOPASSWD: ALL

git clone git@github.com:bennigo/dotfiles.git .dotfiles

git config --global user.email "bgo@vedur.is"
git config --global user.name "Benedikt Gunnar Ófeigsson"

# for esc,ctrl on capslock overload
sudo add-apt-repository ppa:deafmute/interception
sudo apt install interception-caps2esc
sudo add-apt-repository -r ppa:deafmute/interception

# copy files from 
cd ~/.dotfiles/system/
sudo cp etc/udevmon.yaml /etc/
sudo cp etc/systemd/system/udevmon.service /etc/systemd/system/
sudo systemctl enable --now udevmon
sudo cp usr/share/wayland-sessions/sway.desktop /usr/share/wayland-sessions/
sudo cp etc/security/pam_env.conf /etc/security/
sudo cp  etc/zsh/zshenv /etc/zsh/
mkdir -p home/bgo/.local/bin/
cp home/bgo/.local/bin/* /home/bgo/.local/bin/

sudo apt install blueman
sudo apt install brightnessctl
sudo apt install pulseaudio pulseaudio-utils

sudo apt install curl
curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin
cd ~/.local/bin
ln -s /home/bgo/.local/kitty.app/bin/kitty
ln -s /home/bgo/.local/kitty.app/bin/kitten
source ~/.bashrc


# Installing sway and waybar
sudo apt install sway foot-themes swayidle swaylock xdg-desktop-portal-wlr waybar rofi lxqt-policykit
sudo apt install playerctl udiskie mako-notifier fonts-font-awesome

cd ~/Downloads/
wget https://go.dev/dl/go1.24.5.linux-amd64.tar.gz
sudo rm -rf /usr/local/go && sudo tar -C /usr/local -xzf go1.24.5.linux-amd64.tar.gz
go install github.com/savedra1/clipse@v1.1.0

# for ueberzugpp
sudo apt install libssl-dev libvips-dev libsixel-dev libchafa-dev libtbb-dev cmake
sudo apt-get install libxcb-image0-dev
sudo apt-get install libxcb-res0 libxcb-res0-dev
sudo apt-get install libopencv-dev

https://github.com/jstkdng/ueberzugpp
git clone https://github.com/jstkdng/ueberzugpp.git
cd ueberzugpp
mkdir build && cd build
cmake -DCMAKE_BUILD_TYPE=Release ..
cmake --build .
cmake --install build


# for anyconnect
https://vpn.vedur.is

sudo apt install pip

sudo apt remove neovim 
sudo apt-get install ninja-build gettext cmake unzip curl tmux vim

sudo apt install cmake pkg-config libfreetype6-dev libfontconfig1-dev libxcb-xfixes0-dev libxkbcommon-dev python3
sudo apt install clangd
sudo apt install xclip
sudo apt install chafa
sudo apt-get install libssl-dev libvips-dev libsixel-dev libchafa-dev libtbb-dev extra-cmake-modules


curl -fsSL https://fnm.vercel.app/install | bash
curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf | sh
cargo install eza
cargo install fnm
cargo install bat
cargo install ripgrep 
cargo install zoxide 
cargo install fd-find
cargo install viu

curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
nvm install node

curl -fsSL https://deb.nodesource.com/setup_22.x | sudo bash - 
sudo apt-get install -y nodejs
sudo apt install build-essential libreadline-dev unzip
sudo apt install lua5.4 luarocks
sudo apt install ansible
sudo apt install python3-venv python3.12-venv
sudo apt install pass

# installing fzf
git clone --depth 1 https://github.com/junegunn/fzf.git ~/.local/share/fzf
~/.local/share/fzf/install

# tmux plugin manger
git clone https://github.com/tmux-plugins/tpm ~/.local/share/tmux/plugins/tpm

# to enable testing
sudo apt-get install graphicsmagick

# setting up zsh
chsh -s /bin/zsh
curl -fsSL https://raw.githubusercontent.com/ronniedroid/getnf/master/install.sh | bash
~/.local/bin/getnf
>: 19 29 30 41 48 52 65 66 67
zsh <(curl -s https://raw.githubusercontent.com/zap-zsh/zap/master/install.zsh) --branch release-v1

# latex
sudo apt install texlive-full
sudo apt-get install texlive-latex-base texlive-binaries texlive-fonts-recommended

cd && mkdir -p Downloads/git && cd Downloads/git
git clone git@github.com:neovim/neovim.git && cd neovim
make CMAKE_BUILD_TYPE=RelWithDebInfo
# make CMAKE_BUILD_TYPE=Release
sudo make install

curl -L -O "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh"
bash Miniforge3-Linux-x86_64.sh

# libnfs
git clone git@github.com:sahlberg/libnfs.git
cd libnfs && mkdir build && cd build
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr ..
make && sudo make install
sudo apt install nfs-common libnfs-utils m4

# Installing gmt
sudo apt-get install build-essential cmake libcurl4-gnutls-dev libnetcdf-dev libgdal-dev 
# optional for gmt
sudo apt-get install ninja-build gdal-bin libfftw3-dev libpcre3-dev liblapack-dev libblas-dev libglib2.0-dev ghostscript

# movies
sudo apt-get install graphicsmagick ffmpeg

# to enable document viewing via gmt docs
sudo apt-get install xdg-utils


# to build the documentation
sudo apt-get install python3-sphinx



cd ~/Download/
wget https://github.com/GenericMappingTools/gmt/releases/download/6.5.0/gmt-6.5.0-src.tar.gz
tar -zxf gmt-6.5.0-src.tar.gz
git clone https://github.com/GenericMappingTools/gshhg-gmt.git
git clone https://github.com/GenericMappingTools/dcw-gmt.git

# vantar að editera ConfigUser.cmake til að includa gshhg og dcw
cd gmt-6.5.0
mkdir build && cd build
cmake .. -G Ninja
sudo cmake --build . --target install
